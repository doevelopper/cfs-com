
struct Foo 
{
    long dummy;
}; 

typedef sequence<Foo> FooSeq;

#include "ddsdcps.idl"

interface FooTypeSupport : DDS::TypeSupport 
{
    DDS::ReturnCode_t register_type(
        in DDS::DomainParticipant participant, 
        in string type_name);
    string get_type_name();
};

interface FooDataWriter : DDS::DataWriter 
{

    DDS::InstanceHandle_t register_instance(
        in Foo instance_data);
    DDS::InstanceHandle_t register_instance_w_timestamp(
        in Foo instance_data, 
        in DDS::Time_t source_timestamp);


    DDS::ReturnCode_t unregister_instance(
        in Foo instance_data, 
        in DDS::InstanceHandle_t  handle);
    DDS::ReturnCode_t unregister_instance_w_timestamp(
        in Foo instance_data, 
        in DDS::InstanceHandle_t  handle,
        in DDS::Time_t source_timestamp);

    DDS::ReturnCode_t write(
        in Foo instance_data, 
        in DDS::InstanceHandle_t handle);

    DDS::ReturnCode_t write_w_timestamp(
        in Foo instance_data, 
        in DDS::InstanceHandle_t handle, 
        in DDS::Time_t source_timestamp);

    DDS::ReturnCode_t dispose(
        in Foo instance_data, 
        in DDS::InstanceHandle_t instance_handle);

    DDS::ReturnCode_t dispose_w_timestamp(
        in Foo instance_data, 
        in DDS::InstanceHandle_t instance_handle, 
        in DDS::Time_t source_timestamp);

    DDS::ReturnCode_t get_key_value(
        inout Foo key_holder, 
        in DDS::InstanceHandle_t handle);

    DDS::InstanceHandle_t lookup_instance(
        in Foo key_holder);
};

interface FooDataReader : DDS::DataReader 
{
    DDS::ReturnCode_t read(
        inout FooSeq data_values,
        inout DDS::SampleInfoSeq sample_infos,
        in long max_samples,
        in  DDS::SampleStateMask sample_states, 
        in  DDS::ViewStateMask view_states, 
        in  DDS::InstanceStateMask instance_states);
    
    DDS::ReturnCode_t take(
        inout FooSeq data_values,
        inout DDS::SampleInfoSeq sample_infos,
        in long max_samples,
        in  DDS::SampleStateMask sample_states, 
        in  DDS::ViewStateMask view_states, 
        in  DDS::InstanceStateMask instance_states);
    
    DDS::ReturnCode_t read_w_condition(
        inout FooSeq data_values,
        inout DDS::SampleInfoSeq sample_infos,
        in long max_samples,
        in  DDS::ReadCondition a_condition);
    
    DDS::ReturnCode_t take_w_condition(
        inout FooSeq data_values,
        inout DDS::SampleInfoSeq sample_infos,
        in long max_samples,
        in  DDS::ReadCondition a_condition);

    DDS::ReturnCode_t read_next_sample(
        inout Foo data_value,
        inout DDS::SampleInfo sample_info);

    DDS::ReturnCode_t take_next_sample(
        inout Foo data_value,
        inout DDS::SampleInfo sample_info);


    DDS::ReturnCode_t read_instance(
        inout FooSeq data_values,
        inout DDS::SampleInfoSeq sample_infos,
        in long max_samples,
        in DDS::InstanceHandle_t a_handle,
        in DDS::SampleStateMask sample_states, 
        in DDS::ViewStateMask view_states, 
        in DDS::InstanceStateMask instance_states);

    DDS::ReturnCode_t take_instance(
        inout FooSeq data_values,
        inout DDS::SampleInfoSeq sample_infos,
        in long max_samples,
        in DDS::InstanceHandle_t a_handle,
        in DDS::SampleStateMask sample_states, 
        in DDS::ViewStateMask view_states, 
        in DDS::InstanceStateMask instance_states);

    DDS::ReturnCode_t read_next_instance(
        inout FooSeq data_values,
        inout DDS::SampleInfoSeq sample_infos,
        in long max_samples,
        in DDS::InstanceHandle_t previous_handle,
        in DDS::SampleStateMask sample_states, 
        in DDS::ViewStateMask view_states, 
        in DDS::InstanceStateMask instance_states);

    DDS::ReturnCode_t take_next_instance(
        inout FooSeq data_values,
        inout DDS::SampleInfoSeq sample_infos,
        in long max_samples,
        in DDS::InstanceHandle_t previous_handle,
        in DDS::SampleStateMask sample_states, 
        in DDS::ViewStateMask view_states, 
        in DDS::InstanceStateMask instance_states);

    DDS::ReturnCode_t read_next_instance_w_condition(
        inout FooSeq data_values,
        inout DDS::SampleInfoSeq sample_infos,
        in long max_samples,
        in DDS::InstanceHandle_t previous_handle,
        in DDS::ReadCondition a_condition);

    DDS::ReturnCode_t take_next_instance_w_condition(
        inout FooSeq data_values,
        inout DDS::SampleInfoSeq sample_infos,
        in long max_samples,
        in DDS::InstanceHandle_t previous_handle,
        in DDS::ReadCondition a_condition);


    DDS::ReturnCode_t return_loan(
        inout FooSeq data_values,
        inout DDS::SampleInfoSeq sample_infos);

    DDS::ReturnCode_t get_key_value(
        inout Foo key_holder, 
        in DDS::InstanceHandle_t handle);

    DDS::InstanceHandle_t lookup_instance(
        in Foo key_holder);
}; 

