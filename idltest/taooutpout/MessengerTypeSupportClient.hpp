// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.5.8
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       https://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     https://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// /tmp/ACE_TAO/TAO/TAO_IDL/be/be_codegen.cpp:149

#ifndef _TAO_IDL_TAOOUTPOUT_MESSENGERTYPESUPPORTCLIENT_N1J2U4_H_
#define _TAO_IDL_TAOOUTPOUT_MESSENGERTYPESUPPORTCLIENT_N1J2U4_H_

#include /**/ "ace/pre.h"


#include /**/ <ace/config-all.h>

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include <tao/ORB.h>
#include <tao/SystemException.h>
#include <tao/Basic_Types.h>
#include <tao/ORB_Constants.h>
#include <dds/DCPS/ZeroCopyInfoSeq_T.h>
#include <dds/DCPS/ZeroCopySeq_T.h>
#include <tao/Object.h>
#include <tao/String_Manager_T.h>
#include <tao/Sequence_T.h>
#include <tao/Objref_VarOut_T.h>
#include <tao/Seq_Var_T.h>
#include <tao/Seq_Out_T.h>
#include <tao/Arg_Traits_T.h>
#include <tao/Basic_Arguments.h>
#include <tao/Special_Basic_Arguments.h>
#include <tao/Any_Insert_Policy_T.h>
#include <tao/Fixed_Size_Argument_T.h>
#include <tao/Var_Size_Argument_T.h>
#include /**/ <tao/Version.h>
#include /**/ <tao/Versioned_Namespace.h>

#include "MessengerClient.hpp"
#include "dds/DdsDcpsInfrastructureClient.hpp"
#include "dds/DdsDcpsPublicationClient.hpp"
#include "dds/DdsDcpsSubscriptionExtClient.hpp"
#include "dds/DdsDcpsTopicClient.hpp"
#include "dds/DdsDcpsTypeSupportExtClient.hpp"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 5 || TAO_MICRO_VERSION != 8
#error This file should be regenerated with TAO_IDL
#endif

// TAO_IDL - Generated from
// /tmp/ACE_TAO/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:35

namespace cfs
{

  // TAO_IDL - Generated from
  // /tmp/ACE_TAO/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:35

  namespace com
  {

    // TAO_IDL - Generated from
    // /tmp/ACE_TAO/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:35

    namespace Messenger
    {

      // TAO_IDL - Generated from
      // /tmp/ACE_TAO/TAO/TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp:99

      typedef ::TAO::DCPS::ZeroCopyDataSeq< cfs::com::Messenger::Message, DCPS_ZERO_COPY_SEQ_DEFAULT_SIZE> MessageSeq;
      

      // TAO_IDL - Generated from
      // /tmp/ACE_TAO/TAO/TAO_IDL/be/be_interface.cpp:748

#if !defined (_CFS_COM_MESSENGER_MESSAGETYPESUPPORT__VAR_OUT_CH_)
#define _CFS_COM_MESSENGER_MESSAGETYPESUPPORT__VAR_OUT_CH_

      class MessageTypeSupport;
      typedef MessageTypeSupport *MessageTypeSupport_ptr;
      typedef TAO_Objref_Var_T<MessageTypeSupport> MessageTypeSupport_var;
      typedef TAO_Objref_Out_T<MessageTypeSupport> MessageTypeSupport_out;
      

#endif /* end #if !defined */

      // TAO_IDL - Generated from
      // /tmp/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:40

      class  MessageTypeSupport
        : public virtual ::OpenDDS::DCPS::TypeSupport
      
      {
      public:

        // TAO_IDL - Generated from
        // /tmp/ACE_TAO/TAO/TAO_IDL/be/be_type.cpp:304

        typedef MessageTypeSupport_ptr _ptr_type;
        typedef MessageTypeSupport_var _var_type;
        typedef MessageTypeSupport_out _out_type;

        // The static operations.
        static MessageTypeSupport_ptr _duplicate (MessageTypeSupport_ptr obj);

        static void _tao_release (MessageTypeSupport_ptr obj);

        static MessageTypeSupport_ptr _narrow (::CORBA::Object_ptr obj);
        static MessageTypeSupport_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
        static MessageTypeSupport_ptr _nil (void);

        // TAO_IDL - Generated from
        // /tmp/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:137

        virtual ::CORBA::Boolean _is_a (const char *type_id);
        virtual const char* _interface_repository_id (void) const;
        virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
      
      protected:
        // Abstract or local interface only.
        MessageTypeSupport (void);

        

        virtual ~MessageTypeSupport (void);
      
      private:
        // Private and unimplemented for concrete interfaces.
        MessageTypeSupport (const MessageTypeSupport &);

        void operator= (const MessageTypeSupport &);
      };

      // TAO_IDL - Generated from
      // /tmp/ACE_TAO/TAO/TAO_IDL/be/be_interface.cpp:748

#if !defined (_CFS_COM_MESSENGER_MESSAGEDATAWRITER__VAR_OUT_CH_)
#define _CFS_COM_MESSENGER_MESSAGEDATAWRITER__VAR_OUT_CH_

      class MessageDataWriter;
      typedef MessageDataWriter *MessageDataWriter_ptr;
      typedef TAO_Objref_Var_T<MessageDataWriter> MessageDataWriter_var;
      typedef TAO_Objref_Out_T<MessageDataWriter> MessageDataWriter_out;
      

#endif /* end #if !defined */

      // TAO_IDL - Generated from
      // /tmp/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:40

      class  MessageDataWriter
        : public virtual ::DDS::DataWriter
      
      {
      public:

        // TAO_IDL - Generated from
        // /tmp/ACE_TAO/TAO/TAO_IDL/be/be_type.cpp:304

        typedef MessageDataWriter_ptr _ptr_type;
        typedef MessageDataWriter_var _var_type;
        typedef MessageDataWriter_out _out_type;

        // The static operations.
        static MessageDataWriter_ptr _duplicate (MessageDataWriter_ptr obj);

        static void _tao_release (MessageDataWriter_ptr obj);

        static MessageDataWriter_ptr _narrow (::CORBA::Object_ptr obj);
        static MessageDataWriter_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
        static MessageDataWriter_ptr _nil (void);

        virtual ::DDS::InstanceHandle_t register_instance (
          const ::cfs::com::Messenger::Message & instance) = 0;

        virtual ::DDS::InstanceHandle_t register_instance_w_timestamp (
          const ::cfs::com::Messenger::Message & instance,
          const ::DDS::Time_t & timestamp) = 0;

        virtual ::DDS::ReturnCode_t unregister_instance (
          const ::cfs::com::Messenger::Message & instance,
          ::DDS::InstanceHandle_t handle) = 0;

        virtual ::DDS::ReturnCode_t unregister_instance_w_timestamp (
          const ::cfs::com::Messenger::Message & instance,
          ::DDS::InstanceHandle_t handle,
          const ::DDS::Time_t & timestamp) = 0;

        virtual ::DDS::ReturnCode_t write (
          const ::cfs::com::Messenger::Message & instance_data,
          ::DDS::InstanceHandle_t handle) = 0;

        virtual ::DDS::ReturnCode_t write_w_timestamp (
          const ::cfs::com::Messenger::Message & instance_data,
          ::DDS::InstanceHandle_t handle,
          const ::DDS::Time_t & source_timestamp) = 0;

        virtual ::DDS::ReturnCode_t dispose (
          const ::cfs::com::Messenger::Message & instance_data,
          ::DDS::InstanceHandle_t instance_handle) = 0;

        virtual ::DDS::ReturnCode_t dispose_w_timestamp (
          const ::cfs::com::Messenger::Message & instance_data,
          ::DDS::InstanceHandle_t instance_handle,
          const ::DDS::Time_t & source_timestamp) = 0;

        virtual ::DDS::ReturnCode_t get_key_value (
          ::cfs::com::Messenger::Message & key_holder,
          ::DDS::InstanceHandle_t handle) = 0;

        virtual ::DDS::InstanceHandle_t lookup_instance (
          const ::cfs::com::Messenger::Message & instance_data) = 0;

        // TAO_IDL - Generated from
        // /tmp/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:137

        virtual ::CORBA::Boolean _is_a (const char *type_id);
        virtual const char* _interface_repository_id (void) const;
        virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
      
      protected:
        // Abstract or local interface only.
        MessageDataWriter (void);

        

        virtual ~MessageDataWriter (void);
      
      private:
        // Private and unimplemented for concrete interfaces.
        MessageDataWriter (const MessageDataWriter &);

        void operator= (const MessageDataWriter &);
      };

      // TAO_IDL - Generated from
      // /tmp/ACE_TAO/TAO/TAO_IDL/be/be_interface.cpp:748

#if !defined (_CFS_COM_MESSENGER_MESSAGEDATAREADER__VAR_OUT_CH_)
#define _CFS_COM_MESSENGER_MESSAGEDATAREADER__VAR_OUT_CH_

      class MessageDataReader;
      typedef MessageDataReader *MessageDataReader_ptr;
      typedef TAO_Objref_Var_T<MessageDataReader> MessageDataReader_var;
      typedef TAO_Objref_Out_T<MessageDataReader> MessageDataReader_out;
      

#endif /* end #if !defined */

      // TAO_IDL - Generated from
      // /tmp/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:40

      class  MessageDataReader
        : public virtual ::OpenDDS::DCPS::DataReaderEx
      
      {
      public:

        // TAO_IDL - Generated from
        // /tmp/ACE_TAO/TAO/TAO_IDL/be/be_type.cpp:304

        typedef MessageDataReader_ptr _ptr_type;
        typedef MessageDataReader_var _var_type;
        typedef MessageDataReader_out _out_type;

        // The static operations.
        static MessageDataReader_ptr _duplicate (MessageDataReader_ptr obj);

        static void _tao_release (MessageDataReader_ptr obj);

        static MessageDataReader_ptr _narrow (::CORBA::Object_ptr obj);
        static MessageDataReader_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
        static MessageDataReader_ptr _nil (void);

        virtual ::DDS::ReturnCode_t read (
          ::cfs::com::Messenger::MessageSeq & received_data,
          ::DDS::SampleInfoSeq & info_seq,
          ::CORBA::Long max_samples,
          ::DDS::SampleStateMask sample_states,
          ::DDS::ViewStateMask view_states,
          ::DDS::InstanceStateMask instance_states) = 0;

        virtual ::DDS::ReturnCode_t take (
          ::cfs::com::Messenger::MessageSeq & received_data,
          ::DDS::SampleInfoSeq & info_seq,
          ::CORBA::Long max_samples,
          ::DDS::SampleStateMask sample_states,
          ::DDS::ViewStateMask view_states,
          ::DDS::InstanceStateMask instance_states) = 0;

        virtual ::DDS::ReturnCode_t read_w_condition (
          ::cfs::com::Messenger::MessageSeq & data_values,
          ::DDS::SampleInfoSeq & sample_infos,
          ::CORBA::Long max_samples,
          ::DDS::ReadCondition_ptr a_condition) = 0;

        virtual ::DDS::ReturnCode_t take_w_condition (
          ::cfs::com::Messenger::MessageSeq & data_values,
          ::DDS::SampleInfoSeq & sample_infos,
          ::CORBA::Long max_samples,
          ::DDS::ReadCondition_ptr a_condition) = 0;

        virtual ::DDS::ReturnCode_t read_next_sample (
          ::cfs::com::Messenger::Message & received_data,
          ::DDS::SampleInfo & sample_info) = 0;

        virtual ::DDS::ReturnCode_t take_next_sample (
          ::cfs::com::Messenger::Message & received_data,
          ::DDS::SampleInfo & sample_info) = 0;

        virtual ::DDS::ReturnCode_t read_instance (
          ::cfs::com::Messenger::MessageSeq & received_data,
          ::DDS::SampleInfoSeq & info_seq,
          ::CORBA::Long max_samples,
          ::DDS::InstanceHandle_t a_handle,
          ::DDS::SampleStateMask sample_states,
          ::DDS::ViewStateMask view_states,
          ::DDS::InstanceStateMask instance_states) = 0;

        virtual ::DDS::ReturnCode_t take_instance (
          ::cfs::com::Messenger::MessageSeq & received_data,
          ::DDS::SampleInfoSeq & info_seq,
          ::CORBA::Long max_samples,
          ::DDS::InstanceHandle_t a_handle,
          ::DDS::SampleStateMask sample_states,
          ::DDS::ViewStateMask view_states,
          ::DDS::InstanceStateMask instance_states) = 0;

        virtual ::DDS::ReturnCode_t read_instance_w_condition (
          ::cfs::com::Messenger::MessageSeq & received_data,
          ::DDS::SampleInfoSeq & sample_infos,
          ::CORBA::Long max_samples,
          ::DDS::InstanceHandle_t a_handle,
          ::DDS::ReadCondition_ptr a_condition) = 0;

        virtual ::DDS::ReturnCode_t take_instance_w_condition (
          ::cfs::com::Messenger::MessageSeq & received_data,
          ::DDS::SampleInfoSeq & sample_infos,
          ::CORBA::Long max_samples,
          ::DDS::InstanceHandle_t a_handle,
          ::DDS::ReadCondition_ptr a_condition) = 0;

        virtual ::DDS::ReturnCode_t read_next_instance (
          ::cfs::com::Messenger::MessageSeq & received_data,
          ::DDS::SampleInfoSeq & info_seq,
          ::CORBA::Long max_samples,
          ::DDS::InstanceHandle_t a_handle,
          ::DDS::SampleStateMask sample_states,
          ::DDS::ViewStateMask view_states,
          ::DDS::InstanceStateMask instance_states) = 0;

        virtual ::DDS::ReturnCode_t take_next_instance (
          ::cfs::com::Messenger::MessageSeq & received_data,
          ::DDS::SampleInfoSeq & info_seq,
          ::CORBA::Long max_samples,
          ::DDS::InstanceHandle_t a_handle,
          ::DDS::SampleStateMask sample_states,
          ::DDS::ViewStateMask view_states,
          ::DDS::InstanceStateMask instance_states) = 0;

        virtual ::DDS::ReturnCode_t read_next_instance_w_condition (
          ::cfs::com::Messenger::MessageSeq & data_values,
          ::DDS::SampleInfoSeq & sample_infos,
          ::CORBA::Long max_samples,
          ::DDS::InstanceHandle_t previous_handle,
          ::DDS::ReadCondition_ptr a_condition) = 0;

        virtual ::DDS::ReturnCode_t take_next_instance_w_condition (
          ::cfs::com::Messenger::MessageSeq & data_values,
          ::DDS::SampleInfoSeq & sample_infos,
          ::CORBA::Long max_samples,
          ::DDS::InstanceHandle_t previous_handle,
          ::DDS::ReadCondition_ptr a_condition) = 0;

        virtual ::DDS::ReturnCode_t return_loan (
          ::cfs::com::Messenger::MessageSeq & received_data,
          ::DDS::SampleInfoSeq & info_seq) = 0;

        virtual ::DDS::ReturnCode_t get_key_value (
          ::cfs::com::Messenger::Message & key_holder,
          ::DDS::InstanceHandle_t handle) = 0;

        virtual ::DDS::InstanceHandle_t lookup_instance (
          const ::cfs::com::Messenger::Message & instance_data) = 0;

        // TAO_IDL - Generated from
        // /tmp/ACE_TAO/TAO/TAO_IDL/be/be_visitor_interface/interface_ch.cpp:137

        virtual ::CORBA::Boolean _is_a (const char *type_id);
        virtual const char* _interface_repository_id (void) const;
        virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
      
      protected:
        // Abstract or local interface only.
        MessageDataReader (void);

        

        virtual ~MessageDataReader (void);
      
      private:
        // Private and unimplemented for concrete interfaces.
        MessageDataReader (const MessageDataReader &);

        void operator= (const MessageDataReader &);
      };
    
    // TAO_IDL - Generated from
    // /tmp/ACE_TAO/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:64
    
    } // module cfs::com::Messenger
  
  // TAO_IDL - Generated from
  // /tmp/ACE_TAO/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:64
  
  } // module cfs::com

// TAO_IDL - Generated from
// /tmp/ACE_TAO/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:64

} // module cfs

// TAO_IDL - Generated from
// /tmp/ACE_TAO/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:66

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// /tmp/ACE_TAO/TAO/TAO_IDL/be/be_visitor_traits.cpp:60

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_CFS_COM_MESSENGER_MESSAGETYPESUPPORT__TRAITS_)
#define _CFS_COM_MESSENGER_MESSAGETYPESUPPORT__TRAITS_

  template<>
  struct  Objref_Traits< ::cfs::com::Messenger::MessageTypeSupport>
  {
    static ::cfs::com::Messenger::MessageTypeSupport_ptr duplicate (
        ::cfs::com::Messenger::MessageTypeSupport_ptr p);
    static void release (
        ::cfs::com::Messenger::MessageTypeSupport_ptr p);
    static ::cfs::com::Messenger::MessageTypeSupport_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::cfs::com::Messenger::MessageTypeSupport_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CFS_COM_MESSENGER_MESSAGEDATAWRITER__TRAITS_)
#define _CFS_COM_MESSENGER_MESSAGEDATAWRITER__TRAITS_

  template<>
  struct  Objref_Traits< ::cfs::com::Messenger::MessageDataWriter>
  {
    static ::cfs::com::Messenger::MessageDataWriter_ptr duplicate (
        ::cfs::com::Messenger::MessageDataWriter_ptr p);
    static void release (
        ::cfs::com::Messenger::MessageDataWriter_ptr p);
    static ::cfs::com::Messenger::MessageDataWriter_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::cfs::com::Messenger::MessageDataWriter_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CFS_COM_MESSENGER_MESSAGEDATAREADER__TRAITS_)
#define _CFS_COM_MESSENGER_MESSAGEDATAREADER__TRAITS_

  template<>
  struct  Objref_Traits< ::cfs::com::Messenger::MessageDataReader>
  {
    static ::cfs::com::Messenger::MessageDataReader_ptr duplicate (
        ::cfs::com::Messenger::MessageDataReader_ptr p);
    static void release (
        ::cfs::com::Messenger::MessageDataReader_ptr p);
    static ::cfs::com::Messenger::MessageDataReader_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::cfs::com::Messenger::MessageDataReader_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// /tmp/ACE_TAO/TAO/TAO_IDL/be/be_codegen.cpp:1686
#if defined (__ACE_INLINE__)
#include "MessengerTypeSupportC.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */

