/* -*- C++ -*- */
/* Generated by opendds_idl version 3.15 (ACE version 6.5.8) running on input file Messenger.idl */
#ifndef OPENDDS_IDL_GENERATED_MESSENGERC_H_GYOA82
#define OPENDDS_IDL_GENERATED_MESSENGERC_H_GYOA82
#include <cstdint>
#include <string>
#include <utility>


/* Begin MODULE: CORBA */


/* End MODULE: CORBA */


/* Begin MODULE: cfs */



/* Begin MODULE: com */



/* Begin MODULE: Messenger */



/* Begin STRUCT: Message */

namespace cfs {
namespace com {
namespace Messenger {

class Message
{
public:

  Message() = default;
  Message(const std::string& from,
    const std::string& subject,
    int32_t subject_id,
    const std::string& text,
    int32_t count);

  void from(const std::string& val) { _from = val; }
  void from(std::string&& val) { _from = std::move(val); }
  const std::string& from() const { return _from; }
  std::string& from() { return _from; }
  std::string _from;

  void subject(const std::string& val) { _subject = val; }
  void subject(std::string&& val) { _subject = std::move(val); }
  const std::string& subject() const { return _subject; }
  std::string& subject() { return _subject; }
  std::string _subject;

  void subject_id(int32_t val) { _subject_id = val; }
  int32_t subject_id() const { return _subject_id; }
  int32_t& subject_id() { return _subject_id; }
  int32_t _subject_id{};

  void text(const std::string& val) { _text = val; }
  void text(std::string&& val) { _text = std::move(val); }
  const std::string& text() const { return _text; }
  std::string& text() { return _text; }
  std::string _text;

  void count(int32_t val) { _count = val; }
  int32_t count() const { return _count; }
  int32_t& count() { return _count; }
  int32_t _count{};

};

void swap(Message& lhs, Message& rhs);

}
}
}

/* End STRUCT: Message */

/* End MODULE: Messenger */

/* End MODULE: com */

/* End MODULE: cfs */
#endif /* OPENDDS_IDL_GENERATED_MESSENGERC_H_GYOA82 */
